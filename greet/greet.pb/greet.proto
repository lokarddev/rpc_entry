syntax = "proto3";

package greet;
option go_package="greet.pb";

message Greeting {
  string first_name = 1;
  string last_name = 2;
}

message GreetRequest {
  Greeting greeting = 1;
}

message GreetResponse {
  string result = 1;
}

message GreetManyTimesRequest {
  Greeting greeting = 1;
}

message GreetManyTimesResponse {
  string result = 1;
}

message LongGreetRequest {
  Greeting greeting = 1;
}

message LongGreetResponse {
  string result = 1;
}

message GreetEveryoneRequest {
  Greeting greeting = 1;
}

message GreetEveryoneResponse {
  string result = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double number = 1;
}

message GreetWithDeadlineRequest {
  Greeting greeting = 1;
}

message GreetWithDeadlineResponse {
  string result = 1;
}

service GreetService{
  //Unary
  rpc Greet(GreetRequest) returns (GreetResponse) {};
  //Server streaming
  rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse) {};
  //Client streaming
  rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {};
  //BiDi streaming
  rpc GreetEveryone(stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse) {};

  rpc GreetWithDeadline(GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse) {};

  // error handling
  // this RPC will throw and exception if sent number is negative
  // Error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}
